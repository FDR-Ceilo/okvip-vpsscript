#!/bin/bash

# Kiểm tra quyền root
if [ "$EUID" -ne 0 ]; then
  echo "Vui lòng chạy với quyền root."
  exit 1
fi

# Đọc thông tin đầu vào
MYSQL_ROOT_PASSWORD=$1
DOMAIN=$2
TEMPLATE=${3:-default}
WEB_ROOT="/var/www/$DOMAIN"
DB_NAME=$(echo "$DOMAIN" | cut -d '.' -f 1)
DB_USER=$DB_NAME"_user"
DB_PASSWORD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 12 | head -n 1)
TEMPLATE_URL="https://github.com/raymonditweb/okvip-vpsscript/raw/main/templates/wordpress/$TEMPLATE.zip"

if [ -z "$MYSQL_ROOT_PASSWORD" ] || [ -z "$DOMAIN" ]; then
  echo "Sử dụng: ./install-wordpress <mysql_root_password> <domain> [template]"
  exit 1
fi

# Kiểm tra Nginx có được cài đặt không
if ! command -v nginx >/dev/null; then
  echo "Nginx chưa được cài đặt. Vui lòng khởi tạo server trước."
  exit 1
fi

# Kiểm tra MySQL có được cài đặt không
if ! command -v mysql >/dev/null; then
  echo "MySQL chưa được cài đặt. Vui lòng khởi tạo server trước."
  exit 1
fi

# Kiểm tra PHP có được cài đặt không
if ! command -v php >/dev/null; then
  echo "PHP chưa được cài đặt. Vui lòng khởi tạo server trước."
  exit 1
fi

# Kiểm tra mật khẩu MySQL
echo "Kiểm tra kết nối MySQL..."
if ! mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "exit" >/dev/null 2>&1; then
  echo "Mật khẩu MySQL không chính xác. Dừng lại."
  exit 1
fi

echo "Bắt đầu cài đặt WordPress với domain $DOMAIN và template $TEMPLATE..."

# Cài đặt unzip nếu chưa có
if ! command -v unzip >/dev/null; then
  echo "Cài đặt unzip..."
  apt install unzip -y
fi

# Cài đặt Let's Encrypt Certbot nếu chưa có
if ! command -v certbot >/dev/null; then
  echo "Cài đặt Certbot..."
  apt install certbot python3-certbot-nginx -y
fi

# Tạo database và user MySQL cho WordPress
echo "Tạo database và user MySQL cho WordPress..."
mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASSWORD';"
mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"
mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "FLUSH PRIVILEGES;"

# Tải template từ URL và giải nén
echo "Tải template $TEMPLATE từ $TEMPLATE_URL..."
mkdir -p $WEB_ROOT
wget -O /tmp/$TEMPLATE.zip $TEMPLATE_URL

echo "Giải nén template..."
unzip /tmp/$TEMPLATE.zip -d $WEB_ROOT

# Import database
if [ -f "$WEB_ROOT/db.sql" ]; then
  echo "Import database từ db.sql..."
  mysql -uroot -p"$MYSQL_ROOT_PASSWORD" $DB_NAME < $WEB_ROOT/db.sql
else
  echo "Không tìm thấy file db.sql trong template. Dừng lại."
  exit 1
fi

# Cập nhật domain trong database thành https://
echo "Cập nhật domain https://$DOMAIN trong database..."
mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "UPDATE ${DB_NAME}.wp_options SET option_value='https://$DOMAIN' WHERE option_name IN ('siteurl', 'home');"

# Cấu hình Nginx cho website
echo "Cấu hình Nginx cho website $DOMAIN..."
cat > /etc/nginx/sites-available/$DOMAIN <<EOL
server {
    listen 80;
    server_name $DOMAIN;
    root $WEB_ROOT;

    index index.php index.html index.htm;

    location / {
        try_files \$uri \$uri/ /index.php?\$args;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    error_log /var/log/nginx/$DOMAIN-error.log;
    access_log /var/log/nginx/$DOMAIN-access.log;
}

server {
    listen 443 ssl;
    server_name $DOMAIN;

    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/$DOMAIN/chain.pem;

    root $WEB_ROOT;
    index index.php index.html index.htm;

    location / {
        try_files \$uri \$uri/ /index.php?\$args;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    error_log /var/log/nginx/$DOMAIN-ssl-error.log;
    access_log /var/log/nginx/$DOMAIN-ssl-access.log;
}
EOL

# Kích hoạt cấu hình Nginx
ln -s /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/
nginx -t
systemctl reload nginx

# Cài đặt SSL với Let's Encrypt nếu chưa có
if ! sudo certbot certificates | grep -q "$DOMAIN"; then
  echo "Cài đặt SSL với Let's Encrypt cho domain $DOMAIN..."
  certbot --nginx -d $DOMAIN --non-interactive --agree-tos -m your-email@example.com --redirect
else
  echo "SSL cho domain $DOMAIN đã tồn tại."
fi

# Thêm domain vào /etc/hosts
if ! grep -q "127.0.0.1 $DOMAIN" /etc/hosts; then
  echo "127.0.0.1 $DOMAIN" >> /etc/hosts
fi

# Tạo hoặc cập nhật wp-config.php
echo "Cấu hình wp-config.php..."
if [ -f "$WEB_ROOT/wp-config.php" ]; then
  echo "wp-config.php đã tồn tại, cập nhật các thông tin cần thiết..."
  wp config set DB_NAME "$DB_NAME" --path=$WEB_ROOT --allow-root
  wp config set DB_USER "$DB_USER" --path=$WEB_ROOT --allow-root
  wp config set DB_PASSWORD "$DB_PASSWORD" --path=$WEB_ROOT --allow-root
else
  echo "Tạo mới wp-config.php..."
  wp config create --dbname="$DB_NAME" --dbuser="$DB_USER" --dbpass="$DB_PASSWORD" --dbhost="localhost" --path=$WEB_ROOT --allow-root
fi

# Tạo lại secret keys cho wp-config.php
echo "Tạo lại secret keys..."
wp config shuffle-salts --path=$WEB_ROOT --allow-root

# Thiết lập quyền cho thư mục web
chown -R www-data:www-data $WEB_ROOT
chmod -R 755 $WEB_ROOT

# Kết thúc
echo "WordPress đã được cài đặt thành công trên domain https://$DOMAIN/"
echo "Thông tin cơ sở dữ liệu:"
echo "  - Database: $DB_NAME"
echo "  - User: $DB_USER"
echo "  - Password: $DB_PASSWORD"
