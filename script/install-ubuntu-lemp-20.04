#!/bin/bash

# Kiểm tra quyền root
if [ "$EUID" -ne 0 ]; then
  echo "Error: Vui lòng chạy với quyền root"
  exit 1
fi

# Kiểm tra phiên bản Ubuntu
OS=$(lsb_release -si)
VERSION=$(lsb_release -sr)

if [[ "$OS" != "Ubuntu" || ( "$VERSION" != "20.04" && "$VERSION" != "22.04" ) ]]; then
  echo "Error: Script này chỉ hỗ trợ Ubuntu 20.04 và 22.04. Phiên bản hiện tại là $OS $VERSION."
  exit 1
fi

set -e
trap 'echo "Đã xảy ra lỗi trong quá trình cài đặt. Vui lòng kiểm tra các thông báo lỗi phía trên."' ERR

# Lấy địa chỉ IP server
SERVER_IP=$(hostname -I | awk '{print $1}')

# Đọc mật khẩu MySQL từ tham số dòng lệnh hoặc tạo ngẫu nhiên nếu không có
MYSQL_ROOT_PASSWORD=${1:-$(tr -dc 'a-zA-Z0-9' </dev/urandom | head -c 32)}

# Đọc domain từ tham số dòng lệnh hoặc dùng mặc định
DOMAIN=${2:-"vpsscript.demo"}
WEB_ROOT="/var/www/$DOMAIN"
DB_NAME=$(echo "$DOMAIN" | cut -d '.' -f 1)

echo "Bắt đầu cài đặt LEMP stack trên Ubuntu 20.04 với domain $DOMAIN..."

# Cập nhật và nâng cấp hệ thống
apt update && apt upgrade -y

# Cài đặt LEMP
echo "Cài đặt LEMP..."
apt install -y nginx mysql-server php-fpm php-mysql unzip

# Mở full cổng firewall cho Nginx
if ufw status | grep -q "inactive"; then
  echo "Cảnh báo: Firewall UFW đang tắt, bạn cần bật thủ công (sudo ufw enable)."
else
  ufw allow 'Nginx Full'
fi

# Khởi động MySQL nếu chưa chạy
systemctl start mysql

# Cài đặt mật khẩu cho MySQL root
echo "Cài đặt mật khẩu cho MySQL root..."
mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '$MYSQL_ROOT_PASSWORD';"

# Kiểm tra mật khẩu đã được thiết lập thành công
echo "Xác minh cài đặt mật khẩu MySQL root..."
if ! mysql --user=root --password="$MYSQL_ROOT_PASSWORD" -e "SELECT 'MySQL root password đã được thiết lập thành công.';"; then
  echo "Lỗi: Không thể kết nối với MySQL bằng mật khẩu root."
  exit 1
fi

# Tạo database với tên từ domain không có phần mở rộng
echo "Tạo database có tên $DB_NAME..."
mysql --user=root --password="$MYSQL_ROOT_PASSWORD" -e "CREATE DATABASE $DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

# Cài đặt PHP 7.4 và các module cần thiết
echo "Cài đặt PHP 7.4..."
apt install -y php7.4-fpm php7.4-mysql php7.4-cli php7.4-curl php7.4-json php7.4-mbstring php7.4-xml php7.4-zip php7.4-gd

# Lấy phiên bản PHP
PHP_VERSION=$(php -v | head -n 1 | grep -oP '\d+\.\d+')

# Cài đặt wp-cli
echo "Cài đặt WP-CLI..."
curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
php wp-cli.phar --info
chmod +x wp-cli.phar
mv wp-cli.phar /usr/local/bin/wp

# Cài đặt phpMyAdmin
echo "Cài đặt phpMyAdmin..."
DEBIAN_FRONTEND=noninteractive apt install phpmyadmin -y

# Lấy phiên bản phpMyAdmin
PHPMYADMIN_VERSION=$(dpkg -l | grep phpmyadmin | awk '{print $3}')

# Cấu hình phpMyAdmin với Nginx và mở cổng
PHPMYADMIN_PORT=8080
ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin

# Cấu hình Nginx để chạy phpMyAdmin trên cổng 8080
echo "Cấu hình Nginx cho phpMyAdmin trên cổng $PHPMYADMIN_PORT..."
cat > /etc/nginx/sites-available/phpmyadmin <<EOL
server {
  listen $PHPMYADMIN_PORT;
  server_name $SERVER_IP;

  root /usr/share/phpmyadmin;
  index index.php index.html index.htm;

  location / {
    try_files \$uri \$uri/ =404;
  }

  location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
    include fastcgi_params;
  }

  location ~ /\.ht {
    deny all;
  }

  error_log /var/log/nginx/phpmyadmin-error.log;
  access_log /var/log/nginx/phpmyadmin-access.log;
}
EOL

# Kích hoạt cấu hình phpMyAdmin
ln -s /etc/nginx/sites-available/phpmyadmin /etc/nginx/sites-enabled/

# Kiểm tra cấu hình Nginx
nginx -t

# Khởi động lại Nginx để áp dụng cấu hình mới
systemctl restart nginx

# Mở cổng cho phpMyAdmin
ufw allow $PHPMYADMIN_PORT/tcp

# Khởi động lại các dịch vụ
systemctl restart nginx
systemctl restart mysql
systemctl restart php7.4-fpm

# Tạo một site demo với domain truyền vào hoặc mặc định vpsscript.demo
echo "Tạo site mẫu $DOMAIN..."

# Tạo thư mục cho website
mkdir -p $WEB_ROOT

# Tạo một trang index.php mẫu
echo "<?php phpinfo(); ?>" > $WEB_ROOT/index.php

# Chuyển quyền thư mục
chown -R www-data:www-data $WEB_ROOT
chmod -R 755 $WEB_ROOT

# Cấu hình Nginx cho website
echo "Cấu hình Nginx cho website $DOMAIN..."
cat > /etc/nginx/sites-available/$DOMAIN <<EOL
server {
  listen 80;
  server_name $DOMAIN;
  root $WEB_ROOT;

  index index.php index.html index.htm;

  location / {
    try_files \$uri \$uri/ =404;
  }

  location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
    include fastcgi_params;
  }

  location ~ /\.ht {
    deny all;
  }

  error_log /var/log/nginx/$DOMAIN-error.log;
  access_log /var/log/nginx/$DOMAIN-access.log;
}
EOL

# Kích hoạt cấu hình website
ln -s /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/

# Kiểm tra cấu hình Nginx
nginx -t

# Khởi động lại Nginx để áp dụng cấu hình mới
systemctl restart nginx

# Thêm domain vào /etc/hosts nếu chưa tồn tại
if ! grep -q "127.0.0.1 $DOMAIN" /etc/hosts; then
  echo "127.0.0.1 $DOMAIN" >> /etc/hosts
fi

# Ghi thông tin cấu hình ra file vpsscript.conf
NGINX_VERSION=$(nginx -v 2>&1 | grep -oP 'nginx/\K[^ ]+')
cat > "/home/vpsscript.conf" <<END
serverip="$SERVER_IP"
current_os_version="$VERSION"
nginx_version="$NGINX_VERSION"
php_version="$PHP_VERSION"
mainsite="$DOMAIN"
mysql_root_password="$MYSQL_ROOT_PASSWORD"
phpmyadmin_version="$PHPMYADMIN_VERSION"
priport="$PHPMYADMIN_PORT"
END

echo "Thông tin cài đặt đã được lưu trong /home/vpsscript.conf"
echo "Website demo đã được khởi tạo thành công tại http://$DOMAIN!"
echo "Database $DB_NAME đã được tạo!"
echo "Bạn có thể truy cập phpMyAdmin tại http://$SERVER_IP:$PHPMYADMIN_PORT"
echo "Mật khẩu root: $MYSQL_ROOT_PASSWORD"
