#!/bin/bash

#
cd ~
if [ ! -f /tmp/vpsscript.conf ]; then
cd /opt/okvip_vpsscript
chmod +x install-before
bash install-before
cd ~
fi
. /tmp/vpsscript.conf

#
if [ "$vpsscriptemail" = "" ] || [ "$svport" = "" ]; then
clear
echo "ERROR include custom config!"
exit
fi

#
phpmacdinh="7.4"
numPHPmacdinh="74"

echo "=========================================================================="
echo "Mac dinh server se duoc cai dat PHP "$phpmacdinh". Neu muon su dung phien ban PHP "
echo "--------------------------------------------------------------------------"
echo "khac, sau khi cai dat server xong dung chuc nang [ Change PHP Version ] "
echo "--------------------------------------------------------------------------"
echo "trong [ Update System ] cua OKVIP-VPSSCRIPT."
echo "--------------------------------------------------------------------------"
echo "vpsscript ho tro: PHP 7.4, PHP 7.3"

free -m
df -h

echo "=========================================================================="
echo "Thong Tin Server:  "
echo "--------------------------------------------------------------------------"
echo "Server Type: $(virt-what | awk 'NR==1 {print $NF}')"
echo "CPU Type: $cpuname"
echo "CPU Core: $cpucores"
echo "CPU Speed: $cpufreq MHz"
echo "Memory: $svram MB"
echo "Disk: $svhdd"
echo "IP: $svip"
echo "=========================================================================="


#
#prompt="Select nginx version: "
#options=("Mainline version (Recommendations)" "Stable version")
#echo "=========================================================================="
#echo "Select nginx version "
#echo "=========================================================================="
#PS3="$prompt"
#select opt in "${options[@]}"; do 
#case "$REPLY" in
##1) nginxselecttype="mainline"; break;;
#2) nginxselecttype="stable"; break;;
#*) nginxselecttype="mainline"; break;;
#esac  
#done

#
nginxselecttype="mainline"
nginxtype="mainline"
if [ "$nginxselecttype" = "stable" ]; then
nginxtype=$nginxselecttype
fi

# thiet lap phien ban nginx de cai dat
rm -rf /home/vpsscript.conf
cat > "/home/vpsscript.conf" <<END
nginxtype="$nginxtype"
END


#prompt="Nhap lua chon cua ban: "
#options=("MariaDB 10.3 (Recommendations)" "MariaDB 10.4" "MariaDB 10.5")
#echo "=========================================================================="
#echo "Lua Chon Cai Dat Phien Ban MariaDB  "
#echo "=========================================================================="
#PS3="$prompt"
#select opt in "${options[@]}"; do 
#case "$REPLY" in
#1) mariadbversion="10.3"; break;;
#2) mariadbversion="10.4"; break;;
#3) mariadbversion="10.5"; break;;
#*) mariadbversion="10.3"; break;;
##*) echo "Ban nhap sai ! Ban vui long chon so trong danh sach";continue;;
#esac  
#done

mariadbversion="10.3"

if [ "$mariadbversion" = "10.4" ]; then
phienbanmariadb=10.4
elif [ "$mariadbversion" = "10.5" ]; then
phienbanmariadb=10.5
else
phienbanmariadb=10.3
fi

# auto mysql root password
passrootmysql=`date |md5sum |cut -c '1-12'`
#echo $passrootmysql

# v1
#echo "-------------------------------------------------------------------------"
#echo "Mat khau root MySQL toi thieu 8 ki tu va chi su dung chu cai va so."
#echo "-------------------------------------------------------------------------"
#echo -n "Nhap mat khau root MySQL [ENTER]: " 
#read passrootmysql
#if [[ ! ${#passrootmysql} -ge 8 ]]; then
#clear
#echo "========================================================================="
#echo "Mat khau tai khoan root MySQL toi thieu phai co 8 ki tu."
#echo "-------------------------------------------------------------------------"
#echo "Ban vui long thu lai !"
#echo "-------------------------------------------------------------------------"
#read -p "Nhan [Enter] de tiep tuc ..."
#clear
#bash /root/vpsscript-setup
#exit
#fi  

#checkpass="^[a-zA-Z0-9_][-a-zA-Z0-9_]{0,61}[a-zA-Z0-9_]$";
#if [[ ! "$passrootmysql" =~ $checkpass ]]; then
#clear
#echo "========================================================================="
#echo "Ban chi duoc dung chu cai va so de dat mat khau MySQL !"
#echo "-------------------------------------------------------------------------"
#echo "Ban vui long thu lai !"
#echo "-------------------------------------------------------------------------"
#read -p "Nhan [Enter] de tiep tuc ..."
#clear
#bash /root/vpsscript-setup
#exit
#fi  
echo "$passrootmysql" > /tmp/vpsscript-mysqlrootpass

###############################################################################
#Download Nginx, vpsscript & phpMyadmin Version
cd /tmp
rm -rf 00-all-nginx-version.txt
rm -rf vpsscript.newversion
rm -rf 00-all-phpmyadmin-version.txt
###########################
download_version_nginx () {
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/00-all-nginx-version.txt
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/00-all-nginx-version.txt 00-all-nginx-version.txt
}
download_version_nginx
checkdownload_version_nginx=`cat /tmp/00-all-nginx-version.txt`
if [ -z "$checkdownload_version_nginx" ]; then
download_version_nginx
fi
###########################
download_version_phpmyadmin () {
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/00-all-phpmyadmin-version.txt
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/00-all-phpmyadmin-version.txt 00-all-phpmyadmin-version.txt
}
download_version_phpmyadmin
checkdownload_version_phpmyadmin=`cat /tmp/00-all-phpmyadmin-version.txt`
if [ -z "$checkdownload_version_phpmyadmin" ]; then
download_version_phpmyadmin
fi
###########################
download_version_vpsscript () {
#wget -q --no-check-certificate https://hostingaz.vn/script/vpsscript/vpsscript.newversion
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/vpsscript.newversion vpsscript.newversion
}
download_version_vpsscript
checkdownload_version_vpsscript=`cat /tmp/vpsscript.newversion`
if [ -z "$checkdownload_version_vpsscript" ]; then
download_version_vpsscript
fi
###########################
cd
. /opt/okvip_vpsscript/script/vpsscript/nginx-setup.conf
phpmyadmin_version=`cat /tmp/00-all-phpmyadmin-version.txt | awk 'NR==2 {print $1}' | sed 's/|//' | sed 's/|//'`
#Nginx_VERSION=`cat /tmp/00-all-nginx-version.txt | awk 'NR==2 {print $1}' | sed 's/|//' | sed 's/|//'`
vpsscript_version=`cat /tmp/vpsscript.newversion`

# End Download Nginx, OKVIP-VPSSCRIPT & phpMyadmin Version
###############################################################################

clear

echo "=========================================================================="
echo "OS Version: "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))
echo "--------------------------------------------------------------------------"
echo "OKVIP-VPSSCRIPT Se Cai Dat Server Theo Thong Tin:"
echo "Your VPS will been install with config:"
echo "=========================================================================="
echo "eMail Quan Ly (admin email): $vpsscriptemail"
echo "--------------------------------------------------------------------------"
echo "phpMyAdmin Port: $svport"
echo "--------------------------------------------------------------------------"
echo "phpMyAdmin Version: $phpmyadmin_version"
echo "--------------------------------------------------------------------------"
echo "MariaDB Version: $phienbanmariadb"
echo "--------------------------------------------------------------------------"
echo "Mat khau root MySQL (MySQL root password): $passrootmysql"
echo "--------------------------------------------------------------------------"
if [ "$nginxtype" = "stable" ]; then
echo "Nginx Version: "$Nginx_VERSION
else
echo "Nginx Version: Mainline version"
fi
echo "--------------------------------------------------------------------------"
echo "PHP Version: "$phpmacdinh
echo "--------------------------------------------------------------------------"
echo "OKVIP-VPSSCRIPT Version: $vpsscript_version"
echo "=========================================================================="
#prompt="Nhap lua chon cua ban (Please select): "
#options=( "Dong Y (I agree)" "Khong Dong Y (disagree)")
#PS3="$prompt"
#select opt in "${options[@]}"; do 
    #case "$REPLY" in
    #1) xacnhanthongtin="dongy"; break;;
    #2) xacnhanthongtin="khongdongy"; break;;
    #*) echo "Ban nhap sai ! Ban vui long chon so trong danh sach";continue;;
    #esac  
#done

xacnhanthongtin="dongy"
if [ "$xacnhanthongtin" = "dongy" ]; then
echo "--------------------------------------------------------------------------"
echo "Chuan Bi Cai Dat OKVIP-VPSSCRIPT ..."
sleep 2
else 
clear
rm -rf /root/install && bash /root/vpsscript-setup
exit
fi


download_nginx_conf () {
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/nginx.conf -O /tmp/nginx.conf
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/nginx.conf /tmp/nginx.conf
}
download_nginx_conf
checkdownload_nginx_conf=`cat /tmp/nginx.conf`
if [ -z "$checkdownload_nginx_conf" ]; then
download_nginx_conf
fi

cat >> "/root/.bash_profile" <<END
IPvpsscriptcheck="\$(echo \$SSH_CONNECTION | cut -d " " -f 1)"
timeloginvpsscriptcheck=\$(date +"%e %b %Y, %a %r")
echo 'Someone has IP address '\$IPvpsscriptcheck' login to $svip on '\$timeloginvpsscriptcheck'.' | mail -s 'eMail Notifications From OKVIP-VPSSCRIPT On $svip' ${vpsscriptemail}
END
echo "$svport" > /tmp/priport.txt
#if [ -s /etc/selinux/config ]; then
#sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
#fi

/opt/okvip_vpsscript/script/vpsscript/menu/yum-first-install

rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
if [ -f /etc/yum.repos.d/epel.repo ]; then
sudo sed -i "s/mirrorlist=https/mirrorlist=http/" /etc/yum.repos.d/epel.repo
fi


# https://mariadb.com/resources/blog/installing-mariadb-10-on-centos-7-rhel-7/
#if [ "$phienbanmariadb" = "10.4" ] || [ "$phienbanmariadb" = "10.5" ]; then
if [ "$phienbanmariadb" = "10.6" ]; then
cat > "/etc/yum.repos.d/mariadb.repo" <<END
[mariadb-main]
name = MariaDB Server
baseurl = https://downloads.mariadb.com/MariaDB/mariadb-$phienbanmariadb/yum/rhel/\$releasever/\$basearch
gpgkey = file:///etc/pki/rpm-gpg/MariaDB-Server-GPG-KEY
gpgcheck = 1
enabled = 1


[mariadb-maxscale]
# To use the latest stable release of MaxScale, use "latest" as the version
# To use the latest beta (or stable if no current beta) release of MaxScale, use "beta" as the version
name = MariaDB MaxScale
baseurl = https://downloads.mariadb.com/MaxScale/2.4/centos/\$releasever/\$basearch
gpgkey = file:///etc/pki/rpm-gpg/MariaDB-MaxScale-GPG-KEY
gpgcheck = 1
enabled = 1

[mariadb-tools]
name = MariaDB Tools
baseurl = https://downloads.mariadb.com/Tools/rhel/\$releasever/\$basearch
gpgkey = file:///etc/pki/rpm-gpg/MariaDB-Enterprise-GPG-KEY
gpgcheck = 1
enabled = 1
END
else
cat > "/etc/yum.repos.d/mariadb.repo" <<END
# MariaDB $phienbanmariadb CentOS repository list 
# http://downloads.mariadb.org/mariadb/repositories/
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/$phienbanmariadb/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
END
fi

systemctl mask firewalld
systemctl stop firewalld
#systemctl stop sendmail.service 
systemctl stop xinetd.service
systemctl stop saslauthd.service 
systemctl stop rsyslog.service 
systemctl stop postfix.service
#systemctl disable sendmail.service
systemctl disable xinetd.service 
systemctl disable saslauthd.service 
systemctl disable rsyslog.service 
systemctl disable postfix.service
sudo yum -y remove mysql*
sudo yum -y remove php*
sudo yum -y remove httpd*
#sudo yum -y remove sendmail*
sudo yum -y remove postfix*
sudo yum -y remove rsyslog*
mkdir -p /usr/local/vpsscript
cd /usr/local/vpsscript

groupadd nginx
useradd -g nginx -d /dev/null -s /sbin/nologin nginx

sudo yum -y update
sudo yum -y groupinstall "Development Tools"
sudo yum -y install gcc gcc-c++ pcre pcre-devel zlib zlib-devel mailx tar expect imake lsof autoconf nc ca-certificates libedit-devel make automake expat-devel perl-libwww-perl perl-Crypt-SSLeay perl-Net-SSLeay tree virt-what cmake openssl-devel net-tools systemd-devel libdb-devel libxml2-devel libxml2 libxslt-devel gd gd-devel perl-ExtUtils-Embed patch sysstat libtool bind-utils libXext-devel cyrus-sasl-devel glib2 glib2-devel openssl ncurses-devel bzip2 bzip2-devel flex bison libcurl-devel which libevent libevent-devel libgcj gettext-devel vim-minimal nano cairo-devel libpng-devel freetype freetype-devel libart_lgpl-devel  GeoIP-devel gperftools-devel libicu libicu-devel aspell gmp-devel aspell-devel libtidy libtidy-devel readline-devel iptables* coreutils libedit-devel enchant enchant-devel pam-devel git perl-ExtUtils perl-ExtUtils-MakeMaker perl-Time-HiRes openldap openldap-devel curl curl-devel diffutils libc-client libc-client-devel numactl lsof pkgconfig gdbm-devel tk-devel libatomic_ops-devel gperftools bluez-libs-devel
sudo yum -y install zip rar unrar rsync psmisc syslog-ng-libdbi
sudo yum -y install sendmail sendmail-cf m4
systemctl start sendmail.service
systemctl enable sendmail.service
cd
#git --version | awk 'NR==1 {print $3}' > /tmp/gitversion
#if [ -f /tmp/gitversion ]; then
#sed -i 's/\.//g' /tmp/gitversion
#if [ $(cat /tmp/gitversion) -lt 253 ]; then
#if [ ! "$(cat /tmp/gitversion)" = "253" ]; then
#sudo yum -y remove git
#cd /usr/src
#wget -q --no-check-certificate https://github.com/itvn9online/OKVIP-VPSSCRIPT-software/raw/master/git-2.5.3.tar.gz
#tar xzf git-2.5.3.tar.gz
#cd /usr/src/git-2.5.3
#make prefix=/usr/local/git all
#make prefix=/usr/local/git install
#echo "export PATH=$PATH:/usr/local/git/bin" >> /etc/bashrc
#source /etc/bashrc
#cd
#fi
#else
#cd /usr/src
#wget -q --no-check-certificate https://github.com/itvn9online/OKVIP-VPSSCRIPT-software/raw/master/git-2.5.3.tar.gz
#tar xzf git-2.5.3.tar.gz
#cd /usr/src/git-2.5.3
#make prefix=/usr/local/git all
#make prefix=/usr/local/git install
#echo "export PATH=$PATH:/usr/local/git/bin" >> /etc/bashrc
#source /etc/bashrc
#cd
#fi


/opt/okvip_vpsscript/script/vpsscript/menu/nginx-setup7
/opt/okvip_vpsscript/script/vpsscript/menu/nginx-setup-done
# check ssl/ tls in serrver
#openssl s_client -connect $svip:443 -ssl2
#openssl s_client -connect $svip:443 -ssl3
#openssl s_client -connect $svip:443 -tls1
#openssl s_client -connect $svip:443 -tls1_1
#openssl s_client -connect $svip:443 -tls1_2
#sleep 30
#exit


sudo yum makecache fast
#if [ "$phienbanmariadb" = "10.4" ] || [ "$phienbanmariadb" = "10.5" ]; then
#sudo yum -y install perl-DBI libaio libsepol lsof boost-program-options
#sudo yum -y install --repo="mariadb-main" MariaDB-server
#else
#sudo yum -y install --repo="mariadb" MariaDB-server
sudo yum -y install MariaDB-client MariaDB-common MariaDB-compat MariaDB-devel MariaDB-server MariaDB-shared perl-DBD-MySQL
#fi

sudo yum -y install exim syslog-ng cronie cronie-anacron

yum-config-manager --enable remi-php$numPHPmacdinh
#sudo yum -y install php php-curl php-soap php-cli php-snmp php-pspell redis php-pecl-redis php-gmp php-ldap php-bcmath php-intl php-imap perl-libwww-perl perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-fpm php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
#sudo yum -y install php php-curl php-pecl-zip php-zip php-soap php-cli php-snmp php-pspell php-pecl-redis php-gmp php-ldap php-bcmath php-intl php-imap perl-libwww-perl perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-fpm php-gd php-devel php-mysql php-pear php-pecl-memcached php-pecl-memcache php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
if [ -f /etc/vpsscript/menu/nangcap-php/install-php ]; then
/etc/vpsscript/menu/nangcap-php/install-php
else
echo "Install php module..."
sudo yum -y install php php-curl php-pecl-zip php-zip php-soap php-cli php-snmp php-pspell php-gmp php-ldap php-bcmath php-intl php-imap perl-libwww-perl perl-LWP-Protocol-https php-pear-Net-SMTP php-enchant php-common php-fpm php-gd php-devel php-mysql php-pear php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt php-xmlrpc php-tidy
fi

#sudo yum -y install memcached

sudo yum -y install ImageMagick ImageMagick-devel ImageMagick-c++ ImageMagick-c++-devel 
yes "" | pecl install imagick
# neu cai dat thanh cong imagick -> include vao
if [ -f /usr/lib64/php/modules/imagick.so ]; then
echo "extension=imagick.so" > /etc/php.d/imagick.ini
else
rm -rf /etc/php.d/imagick.ini
fi

clear
echo "=========================================================================="
echo "Cai Dat Hoan Tat, Bat Dau Qua Trinh Cau Hinh...... "
echo "=========================================================================="
sleep 3
	ramformariadb=$(calc $svram/10*6)
	ramforphpnginx=$(calc $svram-$ramformariadb)
	max_children=$(calc $ramforphpnginx/30)
	memory_limit=$(calc $ramforphpnginx/5*3)M
	mem_apc=$(calc $ramforphpnginx/5)M
	buff_size=$(calc $ramformariadb/10*8)M
	log_size=$(calc $ramformariadb/10*2)M
systemctl enable exim.service 
systemctl enable syslog-ng.service
systemctl start exim.service 
systemctl start syslog-ng.service
systemctl disable httpd.service
systemctl enable nginx.service 
systemctl start nginx.service 
systemctl enable php-fpm.service 
systemctl start php-fpm.service
#systemctl enable mariadb.service
#systemctl start mariadb.service 
chkconfig --add mysql
chkconfig --levels 235 mysql on
systemctl enable mysql
service mysql start
#systemctl enable redis.service
#systemctl start redis.service
mkdir -p /home/vpsscript.demo/public_html
cd /home/vpsscript.demo/public_html
#wget http://hostingaz.vn/script/vpsscript/robots.txt
#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/html/install/vietnam/index.html
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/html/install/vietnam/index.html index.html
cd
mkdir /home/vpsscript.demo/private_html

# tao thu muc log va cac file log de phong truong hop cac ung dung khong the tu tao
mkdir -p /home/vpsscript.demo/logs
chmod 777 /home/vpsscript.demo/logs
touch /home/vpsscript.demo/logs/mysql-slow.log
touch /home/vpsscript.demo/logs/mysql.log
touch /home/vpsscript.demo/logs/php-fpm-error.log
touch /home/vpsscript.demo/logs/php-fpm-slow.log
touch /home/vpsscript.demo/logs/php-fpm.log
chmod 777 /home/vpsscript.demo/logs/*

mkdir -p /var/log/nginx
chown -R nginx:nginx /var/log/nginx
chown -R nginx:nginx /var/lib/php/session
rm -rf /etc/sysconfig/memcached
cat > "/etc/sysconfig/memcached" <<END
PORT="11211"
USER="memcached"
MAXCONN="10024"
CACHESIZE="20"
OPTIONS=""
END

vpsscript_setup_cleanup_config_file () {
# remove blank in last line
sed -i -e "s/\s*$//" $1
# remove blank in first line
sed -i -e "s/^\s*//" $1
# remove blank line
sed -i -e "/^$/d" $1
sed -i -e '/^\s*$/d' $1
# remove comment line
sed -i -e '/^\s*#.*$/d' $1
}

rm -rf /etc/nginx/conf.d
mkdir -p /etc/nginx/conf.d
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/vpsscript.demo.txt /etc/nginx/conf.d/vpsscript.demo.conf
# config
cat > "/tmp/vpsscriptSetConfigFile" <<END
#!/bin/bash 
sed -i 's/tmp_listen_svport/listen $svport/g' /etc/nginx/conf.d/vpsscript.demo.conf
END
chmod +x /tmp/vpsscriptSetConfigFile
sh /tmp/vpsscriptSetConfigFile
rm -rf /tmp/vpsscriptSetConfigFile
# cleanup
vpsscript_setup_cleanup_config_file "/etc/nginx/conf.d/vpsscript.demo.conf"


if [[ $svram -ge 32 && $svram -le 449  ]] ; then 
pmmaxchildren=4
pmstartservers=2
pmminspareservers=1
pmmaxspareservers=3
pmmaxrequests=150
###############################################
elif [[ $svram -ge 450 && $svram -le 1300  ]] ; then
pmmaxchildren=10
pmstartservers=3
pmminspareservers=2
pmmaxspareservers=6
pmmaxrequests=400
###############################################
elif [[ $svram -ge 1302 && $svram -le 1800  ]] ; then
pmmaxchildren=15
pmstartservers=3
pmminspareservers=2
pmmaxspareservers=6
pmmaxrequests=500
###############################################
elif [[ $svram -ge 1801 && $svram -le 2800  ]] ; then
pmmaxchildren=20
pmstartservers=3
pmminspareservers=2
pmmaxspareservers=6
pmmaxrequests=500
###############################################
elif [[ $svram -ge 2801 && $svram -le 5000  ]] ; then
pmmaxchildren=33
pmstartservers=3
pmminspareservers=2
pmmaxspareservers=6
pmmaxrequests=500

###############################################
else
pmmaxchildren=50
pmstartservers=3
pmminspareservers=2
pmmaxspareservers=6
pmmaxrequests=500
fi



rm -rf /etc/php-fpm.d/www.conf
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/www.txt /etc/php-fpm.d/www.conf
# config
cat > "/tmp/vpsscriptSetConfigFile" <<END
#!/bin/bash 
sed -i 's/tmp_pmmaxchildren/$pmmaxchildren/g' /etc/php-fpm.d/www.conf
sed -i 's/tmp_pmstartservers/$pmstartservers/g' /etc/php-fpm.d/www.conf
sed -i 's/tmp_pmminspareservers/$pmminspareservers/g' /etc/php-fpm.d/www.conf
sed -i 's/tmp_pmmaxspareservers/$pmmaxspareservers/g' /etc/php-fpm.d/www.conf
sed -i 's/tmp_pmmaxrequests/$pmmaxrequests/g' /etc/php-fpm.d/www.conf
END
chmod +x /tmp/vpsscriptSetConfigFile
sh /tmp/vpsscriptSetConfigFile
rm -rf /tmp/vpsscriptSetConfigFile
# cleanup
vpsscript_setup_cleanup_config_file "/etc/php-fpm.d/www.conf"


rm -rf /etc/php.ini
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/php.ini /etc/php.ini
# config
cat > "/tmp/vpsscriptSetConfigFile" <<END
#!/bin/bash 
sed -i 's/tmp_memory_limit/$memory_limit/g' /etc/php.ini
END
chmod +x /tmp/vpsscriptSetConfigFile
sh /tmp/vpsscriptSetConfigFile
rm -rf /tmp/vpsscriptSetConfigFile
# cleanup
vpsscript_setup_cleanup_config_file "/etc/php.ini"


if [ ! -d /home/0-vpsscript-SHORTCUT ];then
#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/check-imagick.php.zip -O /home/vpsscript.demo/private_html/check-imagick.php
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/check-imagick.php.zip /home/vpsscript.demo/private_html/check-imagick.php
mkdir -p /home/0-vpsscript-SHORTCUT
mkdir -p /home/vpsscript.demo/private_html/backup
ln -s /home/vpsscript.demo/private_html/backup /home/0-vpsscript-SHORTCUT/Backup\ \(Website\ +\ Database\)
ln -s /etc/nginx/conf.d /home/0-vpsscript-SHORTCUT/Vhost\ \(Vitual\ Host\)
echo "This is shortcut to Backup ( Code & Database ) and Vitual Host in VPS" > /home/0-vpsscript-SHORTCUT/readme.txt
echo "Please do not delete it" >>  /home/0-vpsscript-SHORTCUT/readme.txt
fi

rm -rf /etc/php.d/*opcache*
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/opcache.ini /etc/php.d/opcache.ini
# cleanup
vpsscript_setup_cleanup_config_file "/etc/php.d/opcache.ini"


rm -rf /etc/sysctl.conf
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/sysctl.txt /etc/sysctl.conf
# cleanup
vpsscript_setup_cleanup_config_file "/etc/sysctl.conf"


rm -rf /etc/php-fpm.conf
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/conf-webserver/php-fpm.txt /etc/php-fpm.conf
# cleanup
vpsscript_setup_cleanup_config_file "/etc/php-fpm.conf"


if [[ $svram -ge 32 && $svram -le 449  ]] ; then 
heso1=1
elif [[ $svram -ge 450 && $svram -le 1099  ]] ; then
heso1=1
elif [[ $svram -ge 1100 && $svram -le 1999  ]] ; then
heso1=3
elif [[ $svram -ge 2000 && $svram -le 2999  ]] ; then
heso1=6
elif [[ $svram -ge 3000 && $svram -le 5000  ]] ; then
heso1=8
else
heso1=10
fi

if [[ $svram -ge 32 && $svram -le 449  ]] ; then 
heso2=1
elif [[ $svram -ge 450 && $svram -le 1099  ]] ; then
heso2=2
elif [[ $svram -ge 1100 && $svram -le 1999  ]] ; then
heso2=3
elif [[ $svram -ge 2000 && $svram -le 2999  ]] ; then
heso2=4
elif [[ $svram -ge 3000 && $svram -le 5000  ]] ; then
heso2=6
else
heso2=10
fi

if [[ $svram -ge 32 && $svram -le 449  ]] ; then 
heso3=1
elif [[ $svram -ge 450 && $svram -le 1099  ]] ; then
heso3=2
elif [[ $svram -ge 1100 && $svram -le 1999  ]] ; then
heso3=3
elif [[ $svram -ge 2000 && $svram -le 2999  ]] ; then
heso3=4
elif [[ $svram -ge 3000 && $svram -le 5000  ]] ; then
heso3=5
else
heso3=6
fi

if [[ $svram -ge 32 && $svram -le 449  ]] ; then 
heso4=1
elif [[ $svram -ge 450 && $svram -le 1099  ]] ; then
heso4=1
elif [[ $svram -ge 1100 && $svram -le 1999  ]] ; then
heso4=2
elif [[ $svram -ge 2000 && $svram -le 2999  ]] ; then
heso4=2
elif [[ $svram -ge 3000 && $svram -le 5000  ]] ; then
heso4=3
else
heso4=4
fi

if ! [[ $cpucores =~ $checktruenumber ]] ; then
cpucores=1
fi 

rm -rf /etc/my.cnf.d/server.cnf
    cat > "/etc/my.cnf.d/server.cnf" <<END

[mysqld]
skip-host-cache
skip-name-resolve
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
skip-character-set-client-handshake

user = mysql
default-storage-engine = InnoDB
local-infile=0
ignore-db-dir=lost+found
character-set-server=utf8
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

#bind-address=127.0.0.1
back_log = $(calc 75*$heso2)
max_connections = $(calc 22*$heso2)
key_buffer_size = 32M
myisam_recover = FORCE,BACKUP
myisam_sort_buffer_size = $(calc 32*$heso1)M
join_buffer_size = $(calc 32*$heso2)K  
read_buffer_size = $(calc 32*$heso2)K 
sort_buffer_size = $(calc 64*$heso2)K 
table_definition_cache = 2048
table_open_cache = 2048
thread_cache_size = $(calc 8*$heso2)K
wait_timeout = 50
connect_timeout = 10
interactive_timeout = 40
optimizer_search_depth = 4
tmp_table_size = $(calc 16*$heso3)M
max_heap_table_size = $(calc 16*$heso3)M
max_allowed_packet = $(calc 16*$heso2)M
max_seeks_for_key = 1000

max_length_for_sort_data = 1024
net_buffer_length = 16384
max_connect_errors = 100000
concurrent_insert = 2
read_rnd_buffer_size = $(calc 1*$heso2)M
bulk_insert_buffer_size = 8M
query_cache_limit = 512K
query_cache_size = $(calc 8*$heso2)M
query_cache_type = 1
query_cache_min_res_unit = 2K


log_warnings=1
slow_query_log=0
long_query_time=1
log_error = /home/vpsscript.demo/logs/mysql.log
log_queries_not_using_indexes = 0
slow_query_log_file = /home/vpsscript.demo/logs/mysql-slow.log

# innodb settings
innodb_large_prefix=1
innodb_purge_threads=1
innodb_file_format = Barracuda
innodb_file_per_table = 1
innodb_open_files = $(calc 200*$heso2)
innodb_data_file_path= ibdata1:10M:autoextend
innodb_buffer_pool_size = $(calc 64*$heso2)M
skip-innodb_doublewrite # or commented out

## https://mariadb.com/kb/en/mariadb/xtradbinnodb-server-system-variables/#innodb_buffer_pool_instances
#innodb_buffer_pool_instances=2

innodb_log_files_in_group = 2
innodb_log_file_size = 48M
#innodb_log_buffer_size = 1M
innodb_flush_log_at_trx_commit = 2
innodb_thread_concurrency = $(calc 2*$cpucores)
innodb_lock_wait_timeout=50
innodb_flush_method = O_DIRECT
innodb_support_xa=1

# 200 * # DISKS
#innodb_io_capacity = 100 # 100 for HDD
innodb_read_io_threads = $(calc 4*$cpucores)
innodb_write_io_threads = $(calc 4*$cpucores)

# mariadb settings
[mariadb]

userstat = 0
#key_cache_segments = 0  # 1 to 64
aria_group_commit = none
aria_group_commit_interval = 0
aria_log_file_size = $(calc 11*$heso2)M
aria_log_purge_type = immediate 
aria_pagecache_buffer_size = 1M
aria_sort_buffer_size = 1M

[mariadb-5.5]
#ignore_db_dirs=
query_cache_strip_comments=0

innodb_read_ahead = linear
innodb_adaptive_flushing_method = estimate
innodb_flush_neighbor_pages=none
innodb_stats_update_need_lock = 0
innodb_log_block_size = 512

log_slow_filter =admin,filesort,filesort_on_disk,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk

[mysqld_safe] 
socket=/var/lib/mysql/mysql.sock
log-error=/home/vpsscript.demo/logs/mysql.log
#nice = -5
open-files-limit = 8192

[mysqldump]
quick
max_allowed_packet = 32M

[isamchk]
key_buffer = $(calc 16*$heso4)M
sort_buffer_size = $(calc 128*$heso4)K
read_buffer = $(calc 128*$heso4)K
write_buffer = $(calc 128*$heso4)K

[myisamchk]
key_buffer = $(calc 16*$heso4)M
sort_buffer_size = $(calc 128*$heso4)K
read_buffer = $(calc 128*$heso4)K
write_buffer = $(calc 128*$heso4)K

[mysqlhotcopy]
interactive-timeout
END


if [ "$phienbanmariadb" = "10.3" ] || [ "$phienbanmariadb" = "10.4" ] || [ "$phienbanmariadb" = "10.5" ] ; then

# https://mariadb.com/kb/en/upgrading-from-mariadb-102-to-mariadb-103/
cat > "/tmp/vpsscriptSetConfigFile" <<END
#!/bin/bash 
sed -i 's/innodb_support_xa=/\#innodb_support_xa=/g' /etc/my.cnf.d/server.cnf
END
chmod +x /tmp/vpsscriptSetConfigFile
sh /tmp/vpsscriptSetConfigFile
rm -rf /tmp/vpsscriptSetConfigFile

#
cat >> "/etc/my.cnf.d/server.cnf" <<END

[mariadb-$phienbanmariadb]
innodb_buffer_pool_dump_at_shutdown=1
innodb_buffer_pool_load_at_startup=1
#innodb_buffer_pool_populate=0
performance_schema=OFF
innodb_stats_on_metadata=OFF
innodb_sort_buffer_size=1M
query_cache_strip_comments=0
log_slow_filter =admin,filesort,filesort_on_disk,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk

END

fi


cat >> "/etc/security/limits.conf" <<END
* soft nofile 65536
* hard nofile 65536
nginx soft nofile 65536
nginx hard nofile 65536
* soft core 0 
* hard core 0
END

ulimit -n 65536


mkdir -p /etc/vpsscript
echo "" > /etc/vpsscript/pwprotect.default

cat > "/etc/vpsscript/vpsscript.version" <<END
${vpsscript_version}
END

cat > "/etc/vpsscript/phpmyadmin.version" <<END
${phpmyadmin_version}
END

mkdir -p /etc/redis
cat > "/etc/redis/redis.conf" <<END
maxmemory 40mb
maxmemory-policy allkeys-lru
END

if [ ! "$(grep LANG=en_US.utf-8 /etc/environment)" == "LANG=en_US.utf-8" ]; then
cat > "/etc/environment" <<END
LANG=en_US.utf-8
LC_ALL=en_US.utf-8
END
fi

rm -rf /home/vpsscript.conf
cat > "/home/vpsscript.conf" <<END
mainsite="vpsscript.demo"
priport="$svport"
serverip="$svip"
nginxtype="$nginxtype"
END

rm -rf /var/lib/mysql/ib_logfile0
rm -rf /var/lib/mysql/ib_logfile1
rm -rf /var/lib/mysql/ibdata1
if [ "$phienbanmariadb" = "10.4" ] ; then
sudo systemctl enable --now mariadb
fi
service mysql start
# Download mysql_secure_installation
rm -rf /bin/mysql_secure_installation
download_mysql_secure_installation () {
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/mysql_secure_installation -O /bin/mysql_secure_installation && chmod +x /bin/mysql_secure_installation
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/mysql_secure_installation /bin/mysql_secure_installation && chmod +x /bin/mysql_secure_installation
}
download_mysql_secure_installation
checkmysql_secure_installation=`cat /bin/mysql_secure_installation`
if [ -z "$checkmysql_secure_installation" ]; then
download_mysql_secure_installation
fi

#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/Software/wp-cli.phar
#yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/Software/wp-cli.phar wp-cli.phar
wget -q --no-check-certificate https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
chmod +x wp-cli.phar
mv wp-cli.phar /usr/local/bin/wp
#clear
#echo "=========================================================================="
#echo "Dat Mat Khau Cho Tai Khoan root Cua MYSQL ... "
#echo "=========================================================================="
/bin/mysql_secure_installation
cat >> "/home/vpsscript.conf" <<END
emailmanage="$vpsscriptemail"
END
#systemctl restart mariadb.service
service mysql restart
clear
echo "=========================================================================="
echo "Cai dat phpMyAdmin... "
echo "=========================================================================="
sleep 2
cd /home/vpsscript.demo/private_html/
#wget -q https://gist.github.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php
wget -q https://gist.githubusercontent.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php
#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/memcache.php.zip -O /home/vpsscript.demo/private_html/memcache.php
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/memcache.php.zip /home/vpsscript.demo/private_html/memcache.php

wget -q https://files.phpmyadmin.net/phpMyAdmin/${phpmyadmin_version}/phpMyAdmin-${phpmyadmin_version}-all-languages.zip
unzip -q phpMyAdmin-*.zip > /dev/null 2>&1
yes | cp -rf phpMyAdmin-*/* .
rm -rf phpMyAdmin-*
randomblow=`date |md5sum |cut -c '1-32'`;
sed -e "s|cfg\['blowfish_secret'\] = ''|cfg['blowfish_secret'] = '$randomblow'|" config.sample.inc.php > config.inc.php
cd
mkdir -p /var/lib/php/session
chown -R nginx:nginx /var/lib/php
clear
echo "=========================================================================="
echo "Dang Tao OKVIP-VPSSCRIPT Menu...... "
echo "=========================================================================="
rm -rf /etc/motd

#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/motd -O /etc/motd
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/motd /etc/motd


# Download vpsscript_main_menu
download_vpsscript_main_menu () {
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/vpsscript -O /bin/vpsscript && chmod +x /bin/vpsscript
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/vpsscript /bin/vpsscript && chmod +x /bin/vpsscript
}
download_vpsscript_main_menu
checkvpsscript_main_menu=`cat /bin/vpsscript`
if [ -z "$checkvpsscript_main_menu" ]; then
download_vpsscript_main_menu
fi



cd /etc/vpsscript/

# Download OKVIP-VPSSCRIPT data
download_vpsscript_data () {
#rm -rf menu.zip
#wget --no-check-certificate -q https://hostingaz.vn/script/vpsscript/menu.zip
#unzip -q menu.zip
#rm -rf menu.zip
mkdir -p /etc/vpsscript/menu ; chmod 755 /etc/vpsscript/menu
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/menu/. /etc/vpsscript/menu/
}
#download_vpsscript_data
#if [ ! -f /etc/vpsscript/menu/vpsscript-tien-ich ]; then
#download_vpsscript_data
#fi

#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/errorpage_html.zip
#unzip -q errorpage_html.zip
#rm -rf errorpage_html.zip
#cp -r /etc/vpsscript/errorpage_html /home/vpsscript.demo/
mkdir -p /home/vpsscript.demo/errorpage_html ; chmod 755 /home/vpsscript.demo/errorpage_html
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/errorpage_html/. /home/vpsscript.demo/errorpage_html/
mkdir -p /etc/vpsscript/errorpage_html ; chmod 755 /etc/vpsscript/errorpage_html
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/errorpage_html/. /etc/vpsscript/errorpage_html/

# tao thu muc cho phpmyadmin dung lam cache
mkdir -p /home/vpsscript.demo/private_html/tmp ; chmod 777 /home/vpsscript.demo/private_html/tmp

cd ~
# Chmod 755 Menu
#/opt/okvip_vpsscript/script/vpsscript/menu/chmod-755-menu

###################################################
# Dat mat khau bao ve phpmyadmin, backup files
clear
echo "=========================================================================="
echo "Tao Username & Password bao ve phpMyadmin, backup files  ... "
echo "=========================================================================="
sleep 3
cp -r /etc/vpsscript/menu/vpsscript-tao-mat-khau-bao-ve-folder.py /usr/local/bin/htpasswd.py
chmod 755 /usr/local/bin/htpasswd.py
rm -rf /etc/nginx/.htpasswd
matkhaubv=`date |md5sum |cut -c '1-12'`
usernamebv=`echo "${vpsscriptemail};" | sed 's/\([^@]*\)@\([^;.]*\)\.[^;]*;[ ]*/\1 \2\n/g' | awk 'NR==1 {print $1}'`
htpasswd.py -c -b /etc/nginx/.htpasswd $usernamebv $matkhaubv
chmod -R 644 /etc/nginx/.htpasswd
cat > "/etc/vpsscript/pwprotect.default" <<END
userdefault="$usernamebv"
passdefault="$matkhaubv"
END
#wget --no-check-certificate -q https://vpsscript.com/script/vpsscript/Software/status.php -O /home/vpsscript.demo/public_html/status.php
yes | cp -rf /opt/okvip_vpsscript/script/vpsscript/Software/status.php /home/vpsscript.demo/public_html/status.php
rm -rf /etc/vpsscript/defaulpassword.php
cat > "/etc/vpsscript/defaulpassword.php" <<END
<?php
define('ADMIN_USERNAME','$usernamebv');   // Admin Username
define('ADMIN_PASSWORD','$matkhaubv');    // Admin Password
?>
END
sed -i "s/vpsscript@vpsscript.com/${vpsscriptemail}/g" /home/vpsscript.demo/public_html/status.php
###################################################

if [ -f /etc/sysconfig/iptables ]; then
systemctl enable iptables 
systemctl enable ip6tables
systemctl start iptables
systemctl start ip6tables
systemctl start iptables.service

#iptables -I INPUT -p tcp --dport 80 -j ACCEPT
#iptables -I INPUT -p tcp --dport 22 -j ACCEPT
#iptables -I INPUT -p tcp --dport 21 -j ACCEPT
#iptables -I INPUT -p tcp --dport 25 -j ACCEPT
#iptables -I INPUT -p tcp --dport 443 -j ACCEPT
#iptables -I INPUT -p tcp --dport 465 -j ACCEPT
#iptables -I INPUT -p tcp --dport 587 -j ACCEPT
#iptables -I INPUT -p tcp --dport $svport -j ACCEPT
#iptables -I INPUT -p tcp --dport 11211 -j ACCEPT

FIREWALLLIST="21 22 25 80 443 465 587 $svport 11211"
#echo $FIREWALLLIST
for PORT in ${FIREWALLLIST}; do
	if [ ! "$(iptables -L -n | grep :$PORT | awk 'NR==1 {print $1}')" == "ACCEPT" ]; then
		iptables -I INPUT -p tcp --dport ${PORT} -j ACCEPT
		iptables -I INPUT -p udp --dport ${PORT} -j ACCEPT
	else
		echo $PORT
	fi
done 

# add ca ssh port hien tai neu no khong phai port 22
current_ssh_port=${SSH_CLIENT##* }
echo "current_ssh_port: "$current_ssh_port
if [ ! "$current_ssh_port" = "22" ]; then
iptables -I INPUT -p tcp --dport $current_ssh_port -j ACCEPT
fi

service iptables save
fi


# auto update system
/etc/vpsscript/menu/auto-update-system "first-setup"

#
sudo yum -y install certbot-nginx


clear
#echo "=========================================================================="
#echo "Setup CSF Firewall ... "
#echo "=========================================================================="
sleep 3
#/etc/vpsscript/menu/cai-csf-firewall-cai-dat-CSF-FIREWALL
#systemctl start memcached.service
#systemctl enable memcached.service 
rm -rf /root/install* && rm -rf /tmp/install*
rm -rf /root/vpsscript-setup


#
cat > "/home/vpsscript-manage-info.txt" <<END
=========================================================================
                           VPS MANAGE INFOMATION                         
=========================================================================

phpMyAdmin: http://$svip:$svport

MySQL root password: $passrootmysql

Quan Ly Zend Opcache: http://$svip:$svport/ocp.php

Quan Ly Memcache: http://$svip:$svport/memcache.php

Xem Server Status: http://$svip/status.php

Thong tin dang nhap phpMyadmin, quan ly Zend Opcache, status.php, download backup files ...

Username: $usernamebv
Password: $matkhaubv 

Lenh truy cap OKVIP-VPSSCRIPT: vpsscript

LUU Y: 

De VPS co hieu suat tot nhat - Hay bat: Zend Opcache, Memcached, 
va su dung cac Plugin cache(wp super cache....) cho website. 

Neu VPS dang bat Zend Opcache, khi edit file PHP, do cac file php duoc cache vao RAM  
nen ban can clear Zend Opcache de thay doi duoc cap nhat. 

Chuc ban se thanh cong cung OKVIP-VPSSCRIPT .
END
# increase SSH login speed
if [ -f /etc/ssh/sshd_config ]; then 
sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/g' /etc/ssh/sshd_config
sed -i 's/#UseDNS yes/UseDNS no/g' /etc/ssh/sshd_config
fi
#Change default folder ssh login
#if [ -f /root/.bash_profile ]; then
#sed -i "/.*#\ .bash_profile.*/acd /home" /root/.bash_profile
#fi


cat > "/tmp/finishedemail.sh" <<END
#!/bin/bash 
echo -e 'Subject: OKVIP-VPSSCRIPT - Chuc mung cai dat thanh cong $svip!

Chao ban!

Chuc mung ban da hoan thanh qua trinh cai dat va cau hinh server $svip bang OKVIP-VPSSCRIPT.
Sau day la thong tin quan ly server cua ban:

+ Lenh goi OKVIP-VPSSCRIPT: vpsscript
+ Link phpMyAdmin: http://$svip:$svport
+ Quan Ly Zend Opcache: http://$svip:$svport/ocp.php
+ Quan Ly Memcached: http://$svip:$svport/memcache.php
+ Xem Server Status: http://$svip/status.php
+ Thong tin dang nhap quan ly phpMyadmin,ocp.php, memcache.php, status.php, download backup files ... : 
Username: $usernamebv  
Password: $matkhaubv 

Luu Y:

+ Sau khi cai dat xong, neu server chua tao SWAP (RAM ao), ban tao them SWAP bang chuc nang [ Quan Ly Swap ] (Bat buoc).
+ De dat mat khau bao mat phpMyAdmin, backup files, ...: dung chuc nang [ BAT/TAT Bao Ve phpMyAdmin ] trong [ Quan Ly phpMyAdmin ]
+ De cai dat File Manager: Dung chuc nang [ Cai Dat File Manager ] 
+ Sau khi them website vao server, cai dat FTP server va tao tai khoan FTP cho tung website tren server bang chuc nang [ Quan Ly FTP Server ].
  Mac dinh ban khong the dang nhap FTP vao server bang tai khoan root. Neu muon dang nhap, ban phai dung sFTP voi thong tin dang nhap:
  Host: sftp://$svip  - User: root - Password: Your_password - Port: 22 (hoac port SSH ban da thay)
+ Neu server Timezone khong trung voi gio cua ban, cai dat lai time zone cho Server bang chuc nang [ Cai Dat Server Timezone ] trong [ Tien Ich - Addons ]
+ Sau khi Upload code len server. Ban phai chay chuc nang [ Fix Loi Chmod, Chown ] trong [ Tien Ich - Addons ] de thiet lap phan quyen cho website. 
  Neu website su dung code wordpress, thiet lap phan quyen cho website bang chuc nang [ Fix loi Permission ] trong [ Wordpress Blog Tools ]
+ Tuy theo so luong website, dung luong code ma ban cau hinh lai Zend Opcache, Memcached, Redis Cache bang chuc nang [ Quan Ly Memcached ], [ Quan Ly Zend Opcache ] , [ Quan Ly Redis Cache ] cho phu hop.
+ De bao mat, moi khi co dang nhap SSH va Server, OKVIP-VPSSCRIPT se gui email thong bao toi dia chi email $vpsscriptemail .
  Thay email hoac tat chuc nang nay bang [ BAT/TAT Email Thong Bao Login ] trong [ Tien ich - Addons ].  
  
OKVIP-VPSSCRIPT by Dao Quoc Dai - https://echbay.com' | exim  $vpsscriptemail
END
chmod +x /tmp/finishedemail.sh
/tmp/finishedemail.sh
rm -rf /tmp/finishedemail.sh



#
clear
echo "=========================================================================="
echo "vpsscript has completed the server installation."
echo "=========================================================================="
cat /home/vpsscript-manage-info.txt
echo "=========================================================================="
echo "The server will automatically restart after 3 seconds...."
sleep 3
reboot
exit
