#!/bin/bash

# Kiểm tra nếu không phải root thì thoát
if [ "$EUID" -ne 0 ]; then
	echo "Error: Vui lòng chạy script với quyền root."
	exit 1
fi

# Kiểm tra file cấu hình và tải nếu có
if [[ ! -f /tmp/server_wp_all_scan && -f /home/vpsscript.conf ]]; then
	. /home/vpsscript.conf || {
		echo "Error: Không thể tải /home/vpsscript.conf"
		exit 1
	}
fi

# Định nghĩa các hàm in màu
print_green() {
	echo -e "\033[38;5;71m${1}\033[39m"
}
print_yellow() {
	echo -e "\033[38;5;148m${1}\033[39m"
}
print_red() {
	echo -e "\033[38;5;203m${1}\033[39m"
}

# Biến khởi tạo
root_dir="/var/www"
log_file="/root/scan-wordpress-malware-log.txt"

if [[ ! -d $root_dir ]]; then
	print_red "Error: Thư mục $root_dir không tồn tại. Kiểm tra cấu hình."
	exit 1
fi

# Xóa file log cũ nếu có
>"$log_file"
echo "$(date '+%Y-%m-%d %H:%M:%S') - Starting scan" >>"$log_file"

print_green "Starting scan in directory: $root_dir"

# Hàm kiểm tra và xử lý MIME type
check_file_mime_type() {
	local scan_dir=$1

	if [[ ! -d "$scan_dir" ]]; then
		print_red "Directory $scan_dir does not exist. Skipping."
		return
	fi

	command -v file >/dev/null || {
		print_red "Error: lệnh 'file' không khả dụng"
		exit 1
	}

	while IFS= read -r -d '' file; do
		local mime_type=$(file -b --mime-type "$file")
		local extension="${file##*.}"
		local warning=""

		case $mime_type in
		"image/jpeg" | "image/png" | "image/gif")
			[[ ! $extension =~ ^(jpg|jpeg|png|gif)$ ]] && warning="Invalid extension"
			;;
		"text/plain")
			[[ ! $extension =~ ^(css|json|js|txt|log|html)$ ]] && warning="Invalid extension"
			;;
		"application/pdf")
			[[ $extension != "pdf" ]] && warning="Invalid extension"
			;;
		*)
			warning="Unknown MIME type: $mime_type"
			;;
		esac

		if [[ -n "$warning" ]]; then
			print_yellow "Warning: $file -> MIME: $mime_type, Extension: $extension" | tee -a "$log_file"
		fi
	done < <(find "$scan_dir" -type f -print0)
}

# Hàm kiểm tra các file đáng ngờ trong WordPress
check_wp_files() {
	local wp_dir=$1

	if [[ ! -d "$wp_dir" ]]; then
		print_red "$wp_dir is not a directory. Skipping." | tee -a "$log_file"
		return
	fi

	print_yellow "Checking suspicious files in $wp_dir" | tee -a "$log_file"

	local check_files=("index.php" "wp-login.php")
	for file in "${check_files[@]}"; do
		if [[ -f "$wp_dir/$file" ]]; then
			if grep -q --binary-files=text "base64_decode" "$wp_dir/$file"; then
				print_red "Potential malware found in $wp_dir/$file" | tee -a "$log_file"
			fi
		fi
	done

	if [[ -f "$wp_dir/logo.gif" ]]; then
		print_red "Suspicious file found: $wp_dir/logo.gif" | tee -a "$log_file"
	fi
}

# Hàm chính để quét WordPress
scan_wordpress() {
	local found_wp=false
	for dir in "$root_dir"/*; do
		if [[ -d "$dir" ]]; then
			if [[ -f "$dir/wp-config.php" && -d "$dir/wp-admin" && -d "$dir/wp-content" && -d "$dir/wp-includes" ]]; then
				found_wp=true
				print_green "WordPress site detected: $dir" | tee -a "$log_file"
				check_wp_files "$dir"
				check_file_mime_type "$dir/wp-content/uploads"
			fi
		fi
	done
	[[ $found_wp == false ]] && print_yellow "No WordPress sites found in $root_dir."
}

# Bắt đầu quét
scan_wordpress

# Hiển thị log sau khi hoàn thành
print_yellow "Displaying scan log..."
cat "$log_file"

if grep -q "Potential malware" "$log_file"; then
	print_red "Malware detected! Xem chi tiết trong $log_file."
else
	print_green "No issues detected."
fi

print_green "Scan completed."
